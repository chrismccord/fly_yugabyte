# #!/bin/sh

# Set the ulimit for open files
ulimit -n 1048576

# Set transparent_hugepage to always
echo always > /sys/kernel/mm/transparent_hugepage/enabled

# Start cron
crond

# Prune logs every 1 hour
CRON_JOB="0 * * * * root $YB_HOME/bin/log_cleanup.sh >> /var/log/cron.log 2>&1"
CRON_FILE="/etc/crontab"
if ! grep -qF -- "$CRON_JOB" "$CRON_FILE"; then
  echo "$CRON_JOB" >> "$CRON_FILE"
fi
# Initialize the command with common options

command="./bin/yugabyted start --background=false \
  --advertise_address=\"${FLY_MACHINE_ID}.vm.${FLY_APP_NAME}.internal\" \
  --base_dir=$YB_BASE_DIR \
  --fault_tolerance=\"region\" \
  --ysql_enable_auth=true \
  --callhome=false \
  --cloud_location=\"fly.${FLY_REGION}.${FLY_REGION}\" \
  --master_flags=\"logtostderr=true,raft_heartbeat_interval_ms=300,max_clock_skew_usec=300000,leader_lease_duration_ms=1000\" \
  --tserver_flags=\"logtostderr=true,ysql_catalog_preload_additional_tables=true,raft_heartbeat_interval_ms=300,max_clock_skew_usec=300000,leader_lease_duration_ms=1000\""

# Add the --read-replica flag if FLY_REGION is in REPLICA_REGIONS
if echo "$REPLICA_REGIONS" | grep -qF "$FLY_REGION"; then
  if [ ! -d "$YB_BASE_DIR/conf" ]; then
    command="$command --read_replica --join=\"${PRIMARY_REGION}.${FLY_APP_NAME}.internal\""
  else
    command="$command --read_replica"
  fi
# join new member to the existing cluster
# Note: primary is started first on initial setup, and there is nothing to join
elif [ "$PRIMARY_REGION" != "$FLY_REGION" ] && [ ! -d "$YB_BASE_DIR/conf" ]; then
  command="$command --join=\"${PRIMARY_REGION}.${FLY_APP_NAME}.internal\""
fi

# Execute the command
eval $command

# Fail the command if we are unable to join the cluster
exit 1